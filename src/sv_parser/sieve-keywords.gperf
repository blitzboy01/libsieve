%{
/* sieve-keywords.gperf -- RFC 3028 Sieve Keyword Hash
 * Aaron Stone
 * $Id: sieve-lex.l 80 2006-07-24 14:24:53Z sodabrew $
 */
/* * * *
 * Copyright 2007 by Aaron Stone
 *
 * Licensed under the GNU Lesser General Public License (LGPL)
 * version 2.1, and other versions at the author's discretion.
 * * * */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <stdlib.h>
#include <string.h>
#include <ctype.h>

/* sv_interface */
#include "script.h"
#include "tree.h"

/* sv_parser */
#include "sieve.h"

%}

%struct-type
struct sieve_keyword { char *name; int value; }
%define lookup-function-name libsieve_keyword_struct
%language=ANSI-C
%readonly-tables
%global-table

%%
"if",		IF
"elsif",	ELSIF
"else",		ELSE
"anyof",	ANYOF
"allof",	ALLOF
"exists",	EXISTS
"false",	SFALSE
"true",		STRUE
"address",	ADDRESS
"envelope",	ENVELOPE
"header",	HEADER
"not",	 	NOT
"size",		SIZE
"reject",	REJCT
"fileinto",	FILEINTO
"redirect",	REDIRECT
"keep",		KEEP
"require",	REQUIRE
"stop",		STOP
"discard",	DISCARD
"setflag",	SETFLAG
"addflag",	ADDFLAG
"removeflag",	REMOVEFLAG
"hasflag",	HASFLAG
"mark",		MARK
"unmark",	UNMARK
"notify",	NOTIFY
"vacation",	VACATION
"valid_notif_method",	 VALIDNOTIF
":flags",	FLAGS
":importance",	IMPORTANCE
":method",	METHOD
":options",	OPTIONS
":low",	 	LOW
":normal",	NORMAL
":high",	HIGH
":message",	MESSAGE
":days",	DAYS
":addresses",	ADDRESSES
":subject",	SUBJECT
":mime",	MIME
":from",	FROM
":handle",	HANDLE
":comparator",	COMPARATOR
":is",		IS
":count",	COUNT
":value",	VALUE
":contains",	CONTAINS
":matches",	MATCHES
":regex",	REGEX
":over",	OVER
":under",	UNDER
":all",	 	ALL
":localpart",	LOCALPART
":domain",	DOMAIN
":user",	USER
":detail",	DETAIL
%%
int libsieve_keyword(const char *str, unsigned int len)
{
	struct sieve_keyword const *s;
	if ((s = libsieve_keyword_struct(str, len)))
		return s->value;
	return 0;
}
